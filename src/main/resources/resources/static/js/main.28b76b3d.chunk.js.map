{"version":3,"sources":["Components/Chat Components/LoginPage.js","Components/GenetalContext.js","Components/Message/FriendMessageBox.js","Components/Message/MessageBox.js","Components/Profile/ProfileCard.js","Components/Profile/TopProfileCard.js","Components/Chat Components/TopButtons.js","Classes/Messsage.js","Components/Chat Components/InputText.js","Components/Chat Components/SearchChat.js","Components/ChatApp.js","Components/Message/WebSocketClient.js","App.js","index.js"],"names":["LoginPage","id","className","src","height","width","onSubmit","e","a","preventDefault","username","$","val","password","fetch","data","json","response","console","log","alert","localStorage","setItem","window","location","reload","style","borderRadius","border","paddingLeft","paddingRight","paddingTop","paddingBottom","type","name","placeholder","value","href","color","fontSize","fontWeight","marginTop","float","padding","textAlign","DataContext","createContext","DataProvider","children","useState","user","setUser","userInputText","setUserInputText","currentFriend","setCurrentFriend","connection","setConnection","messages","setMessages","friendID","setFriendID","onopen","send","React","useEffect","token","getItem","WebSocket","onbeforeunload","Provider","FriendMessageBox","message","messageData","date","content","MessageBox","backgroundColor","ProfileCard","userFriend","avatar","alt","TopProfileCard","TopButtons","Message","MyUserID","userToID","this","time","Date","toLocaleString","dateStyle","timeStyle","hour12","InputText","setMessageData","useContext","setContent","setId","onmessage","evt","JSON","parse","map","item","onKeyPress","newMSG","target","key","myMessages","stringify","SearchChat","ChatApp","animate","scrollTop","position","top","friends","friend","onClick","WebSocketClient","App","jwt","setJwt","ReactDOM","render","document","getElementById"],"mappings":"8PAmGeA,MA/Ff,WAEE,OACE,mCACE,sBAAKC,GAAG,aAAaC,UAAU,WAA/B,UACE,qBACEA,UAAU,OACVC,IAAI,iCACJC,OAAO,QACPC,MAAM,UAER,8CACA,uBACEH,UAAU,aACVI,SAAQ,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACTD,EAAEE,iBACEC,EAAWC,IAAE,aAAaC,MAC1BC,EAAWF,IAAE,aAAaC,MAHrB,SAKQE,MAAM,gCAAgCJ,EAAS,IAAIG,GAL3D,cAKLE,EALK,gBAMYA,EAAKC,OANjB,OAMLC,EANK,OAQTC,QAAQC,IAAIT,EAASG,EAASI,GAEP,iCAApBA,EAASA,SACVG,MAAM,iCAENC,aAAaC,QAAQ,MAAML,EAASA,UAEpCM,OAAOC,SAASC,UAfT,4CAAH,sDAFV,UAuBE,sBAAKvB,UAAU,WAAf,UACE,uBACEwB,MAAO,CACLC,aAAc,OACdC,OAAQ,iBACRC,YAAa,OACbC,aAAc,OACdC,WAAY,MACZC,cAAe,MACf3B,MAAO,OACPD,OAAQ,QAEVH,GAAG,WACHgC,KAAK,OACLC,KAAK,WACLC,YAAY,aAEd,uBACET,MAAO,CACLC,aAAc,OACdC,OAAQ,iBACRC,YAAa,OACbC,aAAc,OACdC,WAAY,MACZC,cAAe,MACf3B,MAAO,OACPD,OAAQ,QAEVH,GAAG,WACHgC,KAAK,WACLC,KAAK,WACLC,YAAY,gBAGhB,uBAAOF,KAAK,SAASC,KAAK,GAAGE,MAAM,aAC7B,IACR,oBAAGC,KAAK,IAAR,4BAEE,uBAAO,OAET,qBAAKnC,UAAU,cAAf,SACE,mBACEwB,MAAO,CACLY,MAAO,QACPC,SAAU,OACVC,WAAY,OACZC,UAAW,OACXC,MAAO,OACPC,QAAS,OACTC,UAAW,QARf,6BC9EGC,G,MAAcC,2BAEdC,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7B,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACD,EAA0CJ,mBAAS,IAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KACC,EAAoCN,mBAAS,MAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAAgCR,mBAAS,IAAzC,mBAAOS,EAAP,KAAiBC,EAAjB,KAEA,EAAgCV,mBAAS,IAAzC,mBAAOW,EAAP,KAAiBC,EAAjB,KAyBA,OAvBkB,MAAdL,IACFA,EAAWM,OAAS,WAClBN,EAAWO,KAAK,aAAeb,EAAKjD,MAIxC+D,IAAMC,UAAN,sBAAgB,gCAAAzD,EAAA,6DACR0D,EAAQ7C,aAAa8C,QAAQ,OADrB,SAESrD,MAAM,8BAAgCoD,GAF/C,cAERjD,EAFQ,gBAKKA,EAASD,OALd,OAKRD,EALQ,OAOd0C,EAAc,IAAIW,UAAU,6BAC5BjB,EAAQpC,GARM,2CAWb,IAEHQ,OAAO8C,eAAiB,WACtBb,EAAWO,KAAK,qBAAuBb,EAAKjD,KAI5C,cAAC4C,EAAYyB,SAAb,CACElC,MAAO,CACLc,OACAC,UACAC,gBACAC,mBACAK,WACAC,cACAC,WACAC,cACAL,aACAC,gBACAH,gBACAC,oBAbJ,SAgBGP,KC/BQuB,MAnBf,YAAsC,IAAXC,EAAU,EAAVA,QAEzB,EAAqCR,IAAMf,SAASuB,GAApD,mBAAOC,EAAP,KAGA,OAHA,KAIE,mCACE,qBAEAvE,UAAU,WAFV,UAGE,qBAAKA,UAAU,eAAf,SACE,sBAAMA,UAAU,oBAAhB,SAAqCuE,EAAYC,SAEnD,qBAAKxE,UAAU,qBAAf,SAAqCuE,EAAYE,gBCM1CC,MApBf,YAAkC,IAAZJ,EAAW,EAAXA,QACpB,EAAwCR,IAAMf,SAASuB,GAAvD,mBAAQC,EAAR,KACA,OADA,KAEE,mCACE,qBAAIvE,UAAU,WAAd,UACA,qBAEAA,UAAU,0BAFV,SAGE,sBAAMwB,MAAO,CAAEa,SAAU,IAAMrC,UAAU,oBAAzC,SACGuE,EAAYC,SAGjB,qBACAhD,MAAO,CAACmD,gBAAgB,WACxB3E,UAAU,+CAFV,SAE0DuE,EAAYE,gBCqB7DG,MAlBf,YAAsC,IAAfC,EAAc,EAAdA,WAErB,EAAwBf,IAAMf,SAAS8B,GAAvC,mBAAO7B,EAAP,KAGA,OAHA,KAIE,qBAAIhD,UAAU,WAAd,UACE,qBAAKC,IAAM+C,EAAK8B,OAAQC,IAAI,WAC5B,sBAAK/E,UAAU,QAAf,UACE,qBAAKA,UAAU,OAAf,SAAuBgD,EAAKhB,OAC5B,sBAAKhC,UAAU,SAAf,UACE,mBAAGA,UAAU,wBADf,oBCLOgF,MArBf,YAAmC,IAAThC,EAAQ,EAARA,KACxB,OACE,sBAAKhD,UAAU,WAAf,UACE,mBACEmC,KAAK,sBACL,cAAY,QACZ,cAAY,aAHd,SAKE,qBACElC,IAAK+C,EAAK8B,OACVC,IAAI,aAGR,sBAAK/E,UAAU,aAAf,UACE,oBAAIA,UAAU,QAAd,SAAuBgD,EAAKhB,OAC5B,kECGOiD,MAnBf,WACE,OACE,sBAAKjF,UAAU,gCAAf,UACE,mBAAGmC,KAAK,sBAAsBnC,UAAU,4BAAxC,SACE,mBAAGA,UAAU,mBAEf,mBAAGmC,KAAK,sBAAsBnC,UAAU,0BAAxC,SACE,mBAAGA,UAAU,kBAEf,mBAAGmC,KAAK,sBAAsBnC,UAAU,uBAAxC,SACE,mBAAGA,UAAU,iBAEf,mBAAGmC,KAAK,sBAAsBnC,UAAU,0BAAxC,SACE,mBAAGA,UAAU,yB,eCfRkF,EACX,WAAYnF,EAAI0E,EAASU,EAAUX,EAAMY,GAAW,oBAClDC,KAAKtF,GAAKA,EACVsF,KAAKZ,QAAUA,EACfY,KAAKF,SAAWA,EAChBE,KAAKb,KAAOA,EACZa,KAAKD,SAAWA,GCFhBE,GDSM,IAAIJ,EAAQ,GAAI,GAAI,GAAI,GAAI,ICT3B,IAAIK,MACfD,EAAOA,EAAKE,eAAe,QAAS,CAClCC,UAAW,SACXC,UAAW,SACXC,QAAQ,IAqEKC,MAlEf,YAAqD,IAAhCrB,EAA+B,EAA/BA,YAAasB,EAAkB,EAAlBA,eAEhC,EACEC,qBAAWnD,GADLa,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,SAAUJ,EAA5B,EAA4BA,WAAWN,EAAvC,EAAuCA,KAGvC,EAAwBD,mBAAS,IAAIwC,MAArC,mBACA,GADA,UAC8BxC,mBAAS,KAAvC,mBAAO0B,EAAP,KAAgBsB,EAAhB,KACA,EAAoBhD,mBAASC,EAAKjD,IAAlC,mBAAOA,EAAP,KAAWiG,EAAX,KAmBA,OAdAlC,IAAMC,WAAU,WACI,MAAdT,IACFA,EAAW2C,UAAY,SAACC,GACtB,IAAMrF,EAAOsF,KAAKC,MAAMF,EAAIrF,MAC5BG,QAAQC,IAAIJ,GACZgF,GAAe,SAACtB,GAAD,4BAAqBA,GAArB,CAAkC1D,SAIrDmF,EAAMhD,EAAKjD,MAGV,CAACA,EAAIuD,EAAYI,EAAUe,EAASsB,EAAW/C,IAGhD,sBAAKhD,UAAU,wBAAf,UACGwD,EAAS6C,KAAI,SAACC,GAAD,OACZ,6BAAKA,OAGP,sBAAKtG,UAAU,mBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,sBAAMA,UAAU,mBAAhB,SACE,mBAAGA,UAAU,mBAGjB,uBACE+B,KAAK,OACL/B,UAAU,eACViC,YAAY,qBACZsE,WAAY,SAAClG,GAEX,IAAImG,EAAS,IAAItB,EAAQ,MAAOT,EAAS1E,EAAIuF,EAAM5B,GACnD8C,EAAOhC,KAAOc,EACdkB,EAAO/B,QAAUpE,EAAEoG,OAAOvE,MAC1BsE,EAAOpB,SAAW1B,EAClB8C,EAAOrB,SAAWpF,EAEJ,UAAVM,EAAEqG,MACJb,GAAe,SAACc,GAAD,4BAAoBpC,GAApB,CAAiCiC,OAChDlD,EAAWO,KAAK,gBAAkBsC,KAAKS,UAAUJ,IAEjDxF,QAAQC,IAAIuF,EAAO,UAEnBnG,EAAEoG,OAAOvE,MAAQ,GACjB6D,EAAW,eCjDVc,MAjBf,WACI,OACI,sBAAK7G,UAAU,cAAf,UACU,qBAAKA,UAAU,sBAAf,SACE,sBAAMA,UAAU,mBAAhB,SACE,mBAAGA,UAAU,qBAGjB,uBACE+B,KAAK,OACL/B,UAAU,eACViC,YAAY,kBCmFjB6E,MAnFf,WACE,MAAmDhB,qBAAWnD,GAAtDK,EAAR,EAAQA,KAAMjD,EAAd,EAAcA,GAAIiG,EAAlB,EAAkBA,MAAiBrC,GAAnC,EAAyBD,SAAzB,EAAmCC,aAEnC,EAAgCG,IAAMf,SAAS,IAA/C,mBAAOS,EAAP,KAAiBC,EAAjB,KAQA,OANAK,IAAMC,WAAU,WAGdtD,IAAE,iBAAiBsG,QAAQ,CAAEC,UAAW,KAAS,UAChD,CAACjH,EAAIiG,IAGN,8BACE,qBACExE,MAAO,CACLyF,SAAU,WACVC,IAAK,QAEPlH,UAAU,YALZ,SAOE,qBAAKA,UAAU,gBAAf,SAEE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,gCAAf,UACE,sBAAKD,GAAG,QAAQC,UAAU,cAA1B,UACE,cAAC,EAAD,IAEA,oBAAIA,UAAU,oCAAd,SACGgD,EAAKmE,SACJnE,EAAKmE,QAAQd,KAAI,SAACe,GAChB,OACE,qBACEC,QAAS,WACP5D,EAAY2D,EAAO5D,UACnBG,EAAYyD,EAAOrH,KAHvB,SAME,cAAC,EAAD,CAAa8E,WAAYuC,cAMrC,sBAAKpH,UAAU,OAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,cAAC,EAAD,CAAgBgD,KAAMA,IACtB,cAAC,EAAD,SAGJ,qBAAKhD,UAAU,eAAf,SACE,oBAAIA,UAAU,kBAAd,SACGwD,EAAS6C,KAAI,SAAC/B,GACb,OACE,qBACE+C,QAAS,WACP1D,EAAYW,EAAQc,WAFxB,SAKGd,EAAQa,WAAanC,EAAKjD,GACzB,cAAC,EAAD,CAAYuE,QAASA,IAErB,cAAC,EAAD,CAAkBA,QAASA,aAQvC,cAAC,EAAD,CACEuB,eAAgBpC,EAChBc,YAAaf,mBC4DhB8D,IC1IX9F,EAAQ,CACVmD,gBAAiB,QACjBzE,OAAQ,QACRgH,KAAM,GACND,SAAU,YA4BGM,MAzBf,WACE,MAAsBzD,IAAMf,SAAS,IAArC,mBAAOyE,EAAP,KAAYC,EAAZ,KASA,OAPA3D,IAAMC,WAAU,WACd,IAAMC,EAAQ7C,aAAa8C,QAAQ,OAC/BD,GACFyD,EAAOzD,KAER,IAGD,mCAGE,qBAAKxC,MAAOgG,EAAKhG,EAAO,GAAxB,SACE,cAAC,EAAD,UACGgG,EAAM,cAAC,EAAD,IAAc,cAAC,EAAD,WC1B/BE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.28b76b3d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport $ from \"jquery\";\r\nimport \"../../Css/LoginPage.css\";\r\n\r\nfunction LoginPage() {\r\n\r\n  return (\r\n    <>\r\n      <div id=\"logingPage\" className=\"loginBox\">\r\n        <img\r\n          className=\"user\"\r\n          src=\"https://i.ibb.co/yVGxFPR/2.png\"\r\n          height=\"100px\"\r\n          width=\"100px\"\r\n        />\r\n        <h3>Sign in here</h3>\r\n        <form\r\n          className=\"form-group\"\r\n          onSubmit={ async (e) => {\r\n            e.preventDefault();\r\n            let username = $(\"#username\").val();\r\n            let password = $(\"#password\").val();\r\n\r\n            let data = await fetch(\"http://localhost:8080/signin/\"+username+\"/\"+password )\r\n            let response = await data.json();\r\n\r\n            console.log(username,password,response);\r\n\r\n            if(response.response===\"invalid username or password\"){\r\n              alert(\"invalid username or password\")\r\n            }else{\r\n              localStorage.setItem(\"jwt\",response.response);\r\n              // refresh page\r\n              window.location.reload();\r\n            }\r\n\r\n\r\n          }}\r\n        >\r\n          <div className=\"inputBox\">\r\n            <input\r\n              style={{\r\n                borderRadius: \"10px\",\r\n                border: \"1px solid #ccc\",\r\n                paddingLeft: \"10px\",\r\n                paddingRight: \"10px\",\r\n                paddingTop: \"5px\",\r\n                paddingBottom: \"5px\",\r\n                width: \"100%\",\r\n                height: \"40px\"\r\n              }}\r\n              id=\"username\"\r\n              type=\"text\"\r\n              name=\"Username\"\r\n              placeholder=\"Username\"\r\n            />\r\n            <input\r\n              style={{\r\n                borderRadius: \"10px\",\r\n                border: \"1px solid #ccc\",\r\n                paddingLeft: \"10px\",\r\n                paddingRight: \"10px\",\r\n                paddingTop: \"5px\",\r\n                paddingBottom: \"5px\",\r\n                width: \"100%\",\r\n                height: \"40px\"\r\n              }}\r\n              id=\"password\"\r\n              type=\"password\"\r\n              name=\"Password\"\r\n              placeholder=\"Password\"\r\n            />\r\n          </div>\r\n          <input type=\"submit\" name=\"\" value=\"Login\" />\r\n        </form>{\" \"}\r\n        <a href=\"#\">\r\n          Forget Password\r\n          <br />{\" \"}\r\n        </a>\r\n        <div className=\"text-center\">\r\n          <p\r\n            style={{\r\n              color: \"white\",\r\n              fontSize: \"20px\",\r\n              fontWeight: \"bold\",\r\n              marginTop: \"10px\",\r\n              float: \"left\",\r\n              padding: \"10px\",\r\n              textAlign: \"left\"\r\n            }}\r\n          >\r\n            Sign-Up\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const DataContext = createContext();\r\n\r\nexport const DataProvider = ({ children }) => {\r\n  const [user, setUser] = useState({});\r\n  const [userInputText, setUserInputText] = useState(\"\");\r\n const [currentFriend, setCurrentFriend] = useState({});\r\n  const [connection, setConnection] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const [friendID, setFriendID] = useState(\"\");\r\n\r\n  if (connection != null) {\r\n    connection.onopen = () => {\r\n      connection.send(\"id-Client \" + user.id);\r\n    };\r\n  }\r\n\r\n  React.useEffect(async () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    const response = await fetch(\"http://localhost:8080/user/\" + token);\r\n\r\n\r\n    const data = await response.json();\r\n\r\n    setConnection(new WebSocket(\"ws://localhost:8080/send\"));\r\n    setUser(data);\r\n\r\n\r\n  }, []);\r\n\r\n  window.onbeforeunload = function () {\r\n    connection.send(\"disconnect-client \" + user.id);\r\n  };\r\n\r\n  return (\r\n    <DataContext.Provider\r\n      value={{\r\n        user,\r\n        setUser,\r\n        userInputText,\r\n        setUserInputText,\r\n        messages,\r\n        setMessages,\r\n        friendID,\r\n        setFriendID,\r\n        connection,\r\n        setConnection,\r\n        currentFriend,\r\n        setCurrentFriend\r\n      }}\r\n    >\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n","import React,{useContext} from \"react\";\r\nimport { DataContext } from \"../GenetalContext\";\r\n\r\nfunction FriendMessageBox({message}) {\r\n\r\n  const [messageData,setMessageData] = React.useState(message);\r\n\r\n\r\n  return (\r\n    <>\r\n      <li\r\n  \r\n      className=\"clearfix\">\r\n        <div className=\"message-data\">\r\n          <span className=\"message-data-time\">{messageData.date}</span>\r\n        </div>\r\n        <div className=\"message my-message\">{messageData.content}</div>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FriendMessageBox;\r\n// https://www.bootdey.com/img/Content/avatar/avatar8.png","import React from \"react\";\r\n\r\nfunction MessageBox({ message }) {\r\n  const [ messageData, setMessageData ] = React.useState(message);\r\n  return (\r\n    <>\r\n      <li className=\"clearfix\">\r\n      <div\r\n \r\n      className=\"message-data text-right\">\r\n        <span style={{ fontSize: 10 }} className=\"message-data-time\">\r\n          {messageData.date}\r\n        </span>\r\n      </div>\r\n      <div \r\n      style={{backgroundColor:\"#86c541\"}}\r\n      className=\"message other-message float-right my-message\">{messageData.content}</div>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MessageBox;\r\n","import React from \"react\";\r\nimport \"../../Css/chat.css\";\r\n\r\nlet friend = {\r\n  id: \"018\",\r\n  name: \"ambar\",\r\n  userName: \"ambarsd18\",\r\n  messages: [\r\n    {\r\n      id: \"001\",\r\n      content: \"Hello Kotlin\",\r\n      MyUserID: \"028\",\r\n      date: \"Dec 22, 2021, 1:42:24 PM\",\r\n      userToID: \"018\"\r\n    }\r\n  ],\r\n  avatar: \"https://cdn-icons-png.flaticon.com/512/2922/2922561.png\"\r\n};\r\n\r\nfunction ProfileCard({ userFriend }) {\r\n\r\n  const [user, setUser] = React.useState(userFriend);\r\n\r\n\r\n  return (\r\n    <li className=\"clearfix\">\r\n      <img src={ user.avatar} alt=\"avatar\" />\r\n      <div className=\"about\">\r\n        <div className=\"name\">{user.name}</div>\r\n        <div className=\"status\">\r\n          <i className=\"fa fa-circle online\"></i> online\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ProfileCard;\r\n","import React, { useContext } from \"react\";\r\nimport { DataContext } from \"../GenetalContext\";\r\n\r\nfunction TopProfileCard( {user} ) {\r\n  return (\r\n    <div className=\"col-lg-6\">\r\n      <a\r\n        href=\"javascript:void(0);\"\r\n        data-toggle=\"modal\"\r\n        data-target=\"#view_info\"\r\n      >\r\n        <img\r\n          src={user.avatar}\r\n          alt=\"avatar\"\r\n        />\r\n      </a>\r\n      <div className=\"chat-about\">\r\n        <h6 className=\"m-b-0\">{user.name}</h6>\r\n        <small>Last seen: 2 hours ago</small>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopProfileCard;\r\n","import React from \"react\";\r\n\r\nfunction TopButtons() {\r\n  return (\r\n    <div className=\"col-lg-6 hidden-sm text-right\">\r\n      <a href=\"javascript:void(0);\" className=\"btn btn-outline-secondary\">\r\n        <i className=\"fa fa-camera\"></i>\r\n      </a>\r\n      <a href=\"javascript:void(0);\" className=\"btn btn-outline-primary\">\r\n        <i className=\"fa fa-image\"></i>\r\n      </a>\r\n      <a href=\"javascript:void(0);\" className=\"btn btn-outline-info\">\r\n        <i className=\"fa fa-cogs\"></i>\r\n      </a>\r\n      <a href=\"javascript:void(0);\" className=\"btn btn-outline-warning\">\r\n        <i className=\"fa fa-question\"></i>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopButtons;\r\n","export class Message {\r\n  constructor(id, content, MyUserID, date, userToID) {\r\n    this.id = id;\r\n    this.content = content;\r\n    this.MyUserID = MyUserID;\r\n    this.date = date;\r\n    this.userToID = userToID;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nlet msg = new Message(\"\", \"\", \"\", \"\", \"\");\r\n","import React, { useContext, useState } from \"react\";\r\nimport { DataContext } from \"../GenetalContext\";\r\nimport { Message } from \"../../Classes/Messsage\";\r\n\r\nvar time = new Date();\r\ntime = time.toLocaleString(\"en-US\", {\r\n  dateStyle: \"medium\",\r\n  timeStyle: \"medium\",\r\n  hour12: true\r\n});\r\n\r\nfunction InputText({ messageData, setMessageData }) {\r\n  // const [content , setContent] = useState(\"\");\r\n  const { messages, friendID, connection,user } =\r\n    useContext(DataContext);\r\n\r\n  const [date, setDate] = useState(new Date());\r\n  const [content, setContent] = useState(\"\");\r\n  const [id, setId] = useState(user.id);\r\n\r\n\r\n\r\n\r\n  React.useEffect(() => {\r\n    if (connection != null) {\r\n      connection.onmessage = (evt) => {\r\n        const data = JSON.parse(evt.data);\r\n        console.log(data)\r\n        setMessageData((messageData) => [...messageData, data]);\r\n      };\r\n    }\r\n\r\n    setId(user.id);\r\n\r\n\r\n  }, [id, connection, friendID, content, setContent,user]);\r\n\r\n  return (\r\n    <div className=\"chat-message clearfix\">\r\n      {messages.map((item) => (\r\n        <h1>{item}</h1>\r\n      ))}\r\n\r\n      <div className=\"input-group mb-0\">\r\n        <div className=\"input-group-prepend\">\r\n          <span className=\"input-group-text\">\r\n            <i className=\"fa fa-send\"></i>\r\n          </span>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Enter text here...\"\r\n          onKeyPress={(e) => {\r\n            //get key code of enter\r\n            let newMSG = new Message(\"001\", content, id, time, friendID);\r\n            newMSG.date = time;\r\n            newMSG.content = e.target.value;\r\n            newMSG.userToID = friendID;\r\n            newMSG.MyUserID = id;\r\n\r\n            if (e.key === \"Enter\") {\r\n              setMessageData((myMessages) => [...messageData, newMSG]);\r\n              connection.send(\"request-send \" + JSON.stringify(newMSG));\r\n\r\n              console.log(newMSG,\"newMSG\");\r\n\r\n              e.target.value = \"\";\r\n              setContent(\"\");\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputText;\r\n","import React from 'react'\r\n\r\nfunction SearchChat() {\r\n    return (\r\n        <div className=\"input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"fa fa-search\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Search...\"\r\n                  />\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default SearchChat\r\n","import React, { useContext } from \"react\";\r\nimport \"../Css/chat.css\";\r\nimport FriendMessageBox from \"./Message/FriendMessageBox\";\r\nimport MessageBox from \"./Message/MessageBox\";\r\nimport ProfileCard from \"./Profile/ProfileCard\";\r\nimport $ from \"jquery\";\r\nimport TopProfileCard from \"./Profile/TopProfileCard\";\r\nimport TopButtons from \"./Chat Components/TopButtons\";\r\nimport InputText from \"./Chat Components/InputText\";\r\nimport SearchChat from \"./Chat Components/SearchChat\";\r\nimport { DataContext } from \"./GenetalContext\";\r\nimport { Message } from \"../Classes/Messsage\";\r\n\r\nfunction ChatApp() {\r\n  const { user, id, setId, friendID, setFriendID } = useContext(DataContext);\r\n\r\n  const [messages, setMessages] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    // scroll to buttton\r\n\r\n    $(\".chat-history\").animate({ scrollTop: 10000 }, \"slow\");\r\n  }, [id, setId]);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          position: \"relative\",\r\n          top: \"10vh\"\r\n        }}\r\n        className=\"container\"\r\n      >\r\n        <div className=\"row clearfix \">\r\n     \r\n          <div className=\"col-lg-12\">\r\n            <div className=\"card chat-app  chat-container\">\r\n              <div id=\"plist\" className=\"people-list\">\r\n                <SearchChat />\r\n\r\n                <ul className=\"list-unstyled chat-list mt-2 mb-0\">\r\n                  {user.friends &&\r\n                    user.friends.map((friend) => {\r\n                      return (\r\n                        <div\r\n                          onClick={() => {\r\n                            setMessages(friend.messages);\r\n                            setFriendID(friend.id);\r\n                          }}\r\n                        >\r\n                          <ProfileCard userFriend={friend} />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                </ul>\r\n              </div>\r\n              <div className=\"chat\">\r\n                <div className=\"chat-header clearfix\">\r\n                  <div className=\"row\">\r\n                    <TopProfileCard user={user} />\r\n                    <TopButtons />\r\n                  </div>\r\n                </div>\r\n                <div className=\"chat-history\">\r\n                  <ul className=\"m-b-0  chat-box\">\r\n                    {messages.map((message) => {\r\n                      return (\r\n                        <div\r\n                          onClick={() => {\r\n                            setFriendID(message.userToID);\r\n                          }}\r\n                        >\r\n                          {message.MyUserID === user.id ? (\r\n                            <MessageBox message={message} />\r\n                          ) : (\r\n                            <FriendMessageBox message={message} />\r\n                          )}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n\r\n                <InputText\r\n                  setMessageData={setMessages}\r\n                  messageData={messages}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatApp;\r\n","import React from \"react\";\r\nimport $ from \"jquery\";\r\n\r\nfunction WebSocketClient() {\r\n  /* connect stomp client */\r\n  const [messages, setMessages] = React.useState([]);\r\n  const [connected, setConnected] = React.useState(false);\r\n  const [connection, setConnection] = React.useState(null);\r\n  const [sessionId, setSessionId] = React.useState(\r\n    localStorage.getItem(\"sessionId\")\r\n  );\r\n\r\n  \r\n\r\n\r\n\r\n  function connectWS() {\r\n    if (connection == null) {\r\n      // setConnection(new WebSocket(\"ws://localhost:8080/send\"));\r\n      setConnected(true);\r\n    }\r\n\r\n    if (connection !== null) {\r\n      connection.onopen = () => {\r\n        console.log(\"WebSocket Client Connected\");\r\n        setConnected(true);\r\n        alert(\"connected\");\r\n      };\r\n\r\n      connection.onmessage = (evt) => {\r\n        setMessages((messages) => [...messages, evt.data]);\r\n      };\r\n\r\n      connection.onclose = () => {\r\n        console.log(\"WebSocket Client Disconnected\");\r\n        setConnected(false);\r\n        alert(\"disconnected\");\r\n      };\r\n\r\n      connection.onerror = (error) => {\r\n        console.log(\"WebSocket Client Error: \" + error);\r\n        alert(\"error occured web socket\");\r\n      };\r\n    }\r\n  }\r\n\r\n  function disconnectWS() {\r\n    if (connected) {\r\n      connection.send(\"disconnect \" + sessionId);\r\n      connection.close();\r\n      // setConnection(null);\r\n      setConnected(false);\r\n      alert(\"disconnected\");\r\n    } else {\r\n      alert(\"not connected\");\r\n    }\r\n  }\r\n\r\n  window.addEventListener(\"onbeforeunload\", function (event) {\r\n    disconnectWS();\r\n  });\r\n\r\n  window.onunload = function (event) {\r\n    disconnectWS();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n\r\n\r\n    \r\n  }, []);\r\n\r\n  if (connection !== null) {\r\n    connection.onmessage = (evt) => {\r\n      if (evt.data.includes(\"Welcome to the server \")) {\r\n        let id = evt.data.replace(\"Welcome to the server \", \"\");\r\n        localStorage.setItem(\"sessionId\", id);\r\n        setSessionId(id);\r\n      }\r\n      console.log(\"Message Received: \" + evt.data);\r\n      setMessages((messages) => [...messages, evt.data]);\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: 50 }}>\r\n      <div>\r\n        <button\r\n          className=\"btn btn-success connect-btn\"\r\n          onClick={() => {\r\n            connectWS();\r\n          }}\r\n        >\r\n          connect\r\n        </button>\r\n\r\n        <button\r\n          className=\"btn btn-danger disconnect-btn\"\r\n          onClick={() => {\r\n            if (connected) {\r\n              connection.send(\"disconnect \" + sessionId);\r\n              connection.close();\r\n              setConnection(null);\r\n              setConnected(false);\r\n              alert(\"disconnect\");\r\n            } else {\r\n              alert(\"not connected\");\r\n            }\r\n          }}\r\n        >\r\n          disconnect\r\n        </button>\r\n      </div>\r\n      <button\r\n        className=\"btn btn-light\"\r\n        onClick={(e) => {\r\n          // if (isOpen(connection)) {\r\n          // }\r\n          connection.send(sessionId + \" Hello from the client\");\r\n          // if(!isOpen(connection)) return;\r\n        }}\r\n      >\r\n        send message\r\n      </button>\r\n      <button\r\n        onClick={() => {\r\n          setMessages([]);\r\n        }}\r\n        className=\"btn btn-warning\"\r\n      >\r\n        clear messages\r\n      </button>\r\n\r\n      {/* <input type=\"text\" /> */}\r\n      <ul>\r\n        <h4>messages</h4>\r\n\r\n        {messages.map((message, index) => (\r\n          <li key={index}>{message}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WebSocketClient;\r\n","import React from \"react\";\nimport LoginPage from \"./Components/Chat Components/LoginPage\";\nimport ChatApp from \"./Components/ChatApp\";\nimport { DataProvider } from \"./Components/GenetalContext\";\nimport WebSocketClient from \"./Components/Message/WebSocketClient\";\nimport ProfileCard from \"./Components/Profile/ProfileCard\";\n\nlet style = {\n  backgroundColor: \"black\",\n  height: \"200vh\",\n  top: -20,\n  position: \"relative\"\n}\n\nfunction App() {\n  const [jwt, setJwt] = React.useState(\"\");\n\n  React.useEffect(() => {\n    const token = localStorage.getItem(\"jwt\");\n    if (token) {\n      setJwt(token);\n    } \n  }, []);\n\n  return (\n    <>\n\n\n      <div style={jwt? style: {}}>\n        <DataProvider>\n          {jwt ? <ChatApp /> : <LoginPage />}\n         \n        </DataProvider>\n      \n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}