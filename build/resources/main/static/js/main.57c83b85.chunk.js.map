{"version":3,"sources":["Utils/RegisterUser.js","Components/Chat Components/LoginPage.js","Components/GenetalContext.js","Components/Message/FriendMessageBox.js","Components/Message/MessageBox.js","Components/Profile/ProfileCard.js","Components/Profile/TopProfileCard.js","Utils/LogOff.js","Utils/RemoveFriendPrompt.js","Utils/RemoveFriend.js","Components/Chat Components/TopButtons.js","Classes/Messsage.js","Components/Chat Components/InputText.js","Components/Chat Components/SearchChat.js","Utils/PromptAddUser.js","Classes/Functions.js","Components/Chat Components/AddFriend.js","Components/ChatApp.js","Components/Message/WebSocketClient.js","App.js","index.js"],"names":["RegisterUser","setLogin","user","id","name","password","userName","friends","messages","groups","avatar","password2","style","position","top","fontFamily","className","backgroundColor","color","onChange","e","target","value","type","for","onKeyDown","reader","FileReader","readAsDataURL","files","onloadend","result","onClick","a","fetch","method","headers","body","JSON","stringify","alert","padding","marginLeft","borderRadius","src","alt","LoginPage","React","useState","isLogin","setIsLogin","height","width","onSubmit","preventDefault","username","$","val","data","json","response","localStorage","setItem","window","location","reload","border","paddingLeft","paddingRight","paddingTop","paddingBottom","placeholder","href","fontSize","fontWeight","marginTop","float","textAlign","textUnderlinePosition","DataContext","createContext","DataProvider","children","setUser","userInputText","setUserInputText","currentFriend","setCurrentFriend","connection","setConnection","setMessages","setFriends","onopen","send","useEffect","token","getItem","WebSocket","onbeforeunload","Provider","FriendMessageBox","message","messageData","date","content","MessageBox","ProfileCard","userFriend","index","toggleClass","TopProfileCard","LogOff","removeItem","RemoveFriendPrompt","useContext","delUser","setDelUser","left","post","margin","RemoveFriend","show","setShow","TopButtons","Message","MyUserID","userToID","this","time","Date","toLocaleString","dateStyle","timeStyle","hour12","InputText","setMessageData","setMyFriend","myFriend","setContent","setId","onmessage","evt","parse","myFriendTest01","push","map","item","onKeyPress","newMSG","key","SearchChat","PromptAddUser","setVisibility","visibility","myUser","callBack","newUser","document","mouseup","container","is","has","length","right","filter","opacity","AddFriend","addUserPrompt","setAddUserPrompt","css","animate","ChatApp","scrollTop","friend","request","WebSocketClient","App","jwt","setJwt","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.57c83b85.chunk.js","sourcesContent":["import React from \"react\";\r\nimport $ from \"jquery\";\r\n\r\nfunction RegisterUser({setLogin}) {\r\n  // val id: String = UUID.randomUUID().toString(),\r\n  // val name: String = \"\",\r\n  // val password: String = \"\",\r\n  // val userName: String = \"\",\r\n  // var friends: List<FriendUser> = emptyList(),\r\n  // var messages: List<Message> = emptyList(),\r\n  // var groups: List<Group> = emptyList(),\r\n  // var avatar: String = \"\",\r\n  let user = {\r\n    id: \"\",\r\n    name: \"\",\r\n    password: \"\",\r\n    userName: \"\",\r\n    friends: [],\r\n    messages: [],\r\n    groups: [],\r\n    avatar: \"\"\r\n  };\r\n\r\n  let password2 = \"\";\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          position: \"relative\",\r\n          top: \"2rem\",\r\n          fontFamily: \"monospace\"\r\n        }}\r\n        className=\"registerContainer\"\r\n      >\r\n        <div className=\"col-lg-12 col-xl-11\">\r\n          <div\r\n            className=\"card text-black\"\r\n            style={{\r\n              position: \"relative\",\r\n              top: \"2rem\",\r\n              backgroundColor: \"#2D4263\",\r\n              color: \"white\"\r\n            }}\r\n          >\r\n            <div className=\"card-body p-md-5\">\r\n              <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1\">\r\n                  <p className=\"text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4\">\r\n                    Sign up\r\n                  </p>\r\n\r\n                  <form className=\"mx-1 mx-md-4\">\r\n                    <div className=\"d-flex flex-row align-items-center mb-4\">\r\n                      <i className=\"fas fa-user fa-lg me-3 fa-fw\"></i>\r\n                      <div className=\"form-outline flex-fill mb-0\">\r\n                        <input\r\n                          onChange={(e) => {\r\n                            user.name = e.target.value;\r\n                          }}\r\n                          type=\"text\"\r\n                          id=\"form3Example1c register-name\"\r\n                          className=\"form-control\"\r\n                        />\r\n                        <label className=\"form-label\" for=\"form3Example1c\">\r\n                          Your Name\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex flex-row align-items-center mb-4\">\r\n                      <i className=\"fas fa-envelope fa-lg me-3 fa-fw\"></i>\r\n                      <div className=\"form-outline flex-fill mb-0\">\r\n                        <input\r\n                          onKeyDown={(e) => {\r\n                            user.userName = e.target.value;\r\n                          }}\r\n                          type=\"text\"\r\n                          id=\"form3Example3c register-user-name\"\r\n                          className=\"form-control\"\r\n                        />\r\n                        <label className=\"form-label\" for=\"form3Example3c\">\r\n                          Enter username\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex flex-row align-items-center mb-4\">\r\n                      <i className=\"fas fa-envelope fa-lg me-3 fa-fw\"></i>\r\n                      <div className=\"form-outline flex-fill mb-0\">\r\n                        <input\r\n                          onChange={(e) => {\r\n                            user.id = e.target.value;\r\n                          }}\r\n                          id=\"register-id\"\r\n                          type=\"number\"\r\n                          id=\"form3Example3c register-id\"\r\n                          className=\"form-control\"\r\n                        />\r\n                        <label className=\"form-label\" for=\"form3Example3c\">\r\n                          Enter ID\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex flex-row align-items-center mb-4\">\r\n                      <i className=\"fas fa-envelope fa-lg me-3 fa-fw\"></i>\r\n                      <div className=\"form-outline flex-fill mb-0\">\r\n                        <input\r\n                          onChange={(e) => {\r\n                            let reader = new FileReader();\r\n                            reader.readAsDataURL(e.target.files[0]);\r\n                            reader.onloadend = () => {\r\n                              user.avatar = reader.result;\r\n                   \r\n                            };\r\n                          }}\r\n                          id=\"registerFile\"\r\n                          type=\"file\"\r\n                          id=\"form3Example3c\"\r\n                          className=\"form-control\"\r\n                        />\r\n                        <label className=\"form-label\" for=\"form3Example3c\">\r\n                          Avatar\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex flex-row align-items-center mb-4\">\r\n                      <i className=\"fas fa-lock fa-lg me-3 fa-fw\"></i>\r\n                      <div className=\"form-outline flex-fill mb-0\">\r\n                        <input\r\n                          onChange={(e) => {\r\n                            user.password = e.target.value;\r\n                          }}\r\n                          type=\"password\"\r\n                          id=\"form3Example4c register-password\"\r\n                          className=\"form-control\"\r\n                        />\r\n                        <label className=\"form-label\" for=\"form3Example4c\">\r\n                          Password\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex flex-row align-items-center mb-4\">\r\n                      <i className=\"fas fa-key fa-lg me-3 fa-fw\"></i>\r\n                      <div className=\"form-outline flex-fill mb-0\">\r\n                        <input\r\n                          onChange={(e) => {\r\n                            password2 = e.target.value;\r\n                          }}\r\n                          type=\"password\"\r\n                          id=\"form3Example4cd register-password2\"\r\n                          className=\"form-control\"\r\n                        />\r\n                        <label className=\"form-label\" for=\"form3Example4cd\">\r\n                          Repeat your password\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-center mx-4 mb-3 mb-lg-4\">\r\n                      <button\r\n                        onClick={async () => {\r\n                          if (user.password === password2) {\r\n                            let post = await fetch(\r\n                              \"http://localhost:8080/register\",\r\n                              {\r\n                                method: \"POST\",\r\n                                headers: { \"Content-Type\": \"application/json\" },\r\n                                body: JSON.stringify(user)\r\n                              }\r\n                            );\r\n                          } else {\r\n                            alert(\"Passwords do not match\");\r\n                          }\r\n                        }}\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary btn-lg\"\r\n                      >\r\n                        Register\r\n                      </button>\r\n                      <button\r\n                        onClick={() => {\r\n\r\n                            setLogin(true);\r\n                         \r\n                          \r\n                        }}\r\n                        className=\"btn btn-dark\"\r\n                        style={{ padding: \"0.5rem\", marginLeft: \"1rem\" }}\r\n                      >\r\n                        Go to login\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n                <div className=\"col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2\">\r\n                  <img\r\n                    style={{\r\n                      borderRadius: \"25px\"\r\n                    }}\r\n                    src=\"https://i.pinimg.com/originals/b0/ac/57/b0ac5722ccc9acf10bb560e0dfe420a6.png\"\r\n                    className=\"img-fluid\"\r\n                    alt=\"Sample image\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RegisterUser;\r\n","import React from \"react\";\r\nimport $ from \"jquery\";\r\nimport \"../../Css/LoginPage.css\";\r\nimport RegisterUser from \"../../Utils/RegisterUser\";\r\n\r\nfunction LoginPage() {\r\n  const [isLogin, setIsLogin] = React.useState(true);\r\n\r\n  return (\r\n    <>\r\n      {isLogin ? (\r\n        <div id=\"logingPage\" className=\"loginBox\">\r\n          <img\r\n            className=\"user\"\r\n            src=\"https://i.ibb.co/yVGxFPR/2.png\"\r\n            height=\"100px\"\r\n            width=\"100px\"\r\n          />\r\n          <h3>Sign in here</h3>\r\n          <form\r\n            className=\"form-group\"\r\n            onSubmit={async (e) => {\r\n              e.preventDefault();\r\n              let username = $(\"#username\").val();\r\n              let password = $(\"#password\").val();\r\n\r\n              let data = await fetch(\r\n                \"http://localhost:8080/signin/\" + username + \"/\" + password\r\n              );\r\n              let response = await data.json();\r\n\r\n\r\n              if (response.response === \"invalid username or password\") {\r\n                alert(\"invalid username or password\");\r\n              } else {\r\n                localStorage.setItem(\"jwt\", response.response);\r\n                // refresh page\r\n                window.location.reload();\r\n              }\r\n            }}\r\n          >\r\n            <div className=\"inputBox\">\r\n              <input\r\n                style={{\r\n                  borderRadius: \"10px\",\r\n                  border: \"1px solid #ccc\",\r\n                  paddingLeft: \"10px\",\r\n                  paddingRight: \"10px\",\r\n                  paddingTop: \"5px\",\r\n                  paddingBottom: \"5px\",\r\n                  width: \"100%\",\r\n                  height: \"40px\"\r\n                }}\r\n                id=\"username\"\r\n                type=\"text\"\r\n                name=\"Username\"\r\n                placeholder=\"Username\"\r\n              />\r\n              <input\r\n                style={{\r\n                  borderRadius: \"10px\",\r\n                  border: \"1px solid #ccc\",\r\n                  paddingLeft: \"10px\",\r\n                  paddingRight: \"10px\",\r\n                  paddingTop: \"5px\",\r\n                  paddingBottom: \"5px\",\r\n                  width: \"100%\",\r\n                  height: \"40px\"\r\n                }}\r\n                id=\"password\"\r\n                type=\"password\"\r\n                name=\"Password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            </div>\r\n            <input type=\"submit\" name=\"\" value=\"Login\" />\r\n          </form>{\" \"}\r\n          <a href=\"#\">\r\n            Forget Password\r\n            <br />{\" \"}\r\n          </a>\r\n          <div className=\"text-center\">\r\n            <button\r\n              onClick={() => {\r\n\r\n\r\n                setIsLogin(false);\r\n\r\n\r\n              }}\r\n              className=\"btn btn-link\"\r\n              style={{\r\n                color: \"white\",\r\n                fontSize: \"20px\",\r\n                fontWeight: \"bold\",\r\n                marginTop: \"10px\",\r\n                float: \"left\",\r\n                padding: \"10px\",\r\n                textAlign: \"left\",\r\n                border: \"none\",\r\n                borderRadius: \"10px\",\r\n                textUnderlinePosition: \"under\"\r\n              }}\r\n            >\r\n              Sign-Up\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            position: \"relative\",\r\n            paddingBottom: \"100px\"\r\n         \r\n          }}\r\n          className=\"container RegisterUser-container\"\r\n        >\r\n   <RegisterUser setLogin={setIsLogin} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const DataContext = createContext();\r\n\r\nexport const DataProvider = ({ children }) => {\r\n  const [user, setUser] = useState({});\r\n  const [userInputText, setUserInputText] = useState(\"\");\r\n  const [currentFriend, setCurrentFriend] = useState({});\r\n  const [connection, setConnection] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [friends, setFriends] = useState([]);\r\n\r\n  if (connection != null) {\r\n    connection.onopen = () => {\r\n      connection.send(\"id-Client \" + user.id);\r\n    };\r\n  }\r\n\r\n  React.useEffect(async () => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    const response = await fetch(\"http://localhost:8080/user/\" + token);\r\n    const data = await response.json();\r\n\r\n    setConnection(new WebSocket(\"ws://localhost:8080/send\"));\r\n    setUser(data);\r\n\r\n    setFriends(data.friends);\r\n\r\n\r\n\r\n  }, []);\r\n\r\n  window.onbeforeunload = function () {\r\n    connection.send(\"disconnect-client \" + user.id);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <DataContext.Provider\r\n      value={{\r\n        user,\r\n        setUser,\r\n        userInputText,\r\n        setUserInputText,\r\n        messages,\r\n        setMessages,\r\n        connection,\r\n        setConnection,\r\n        currentFriend,\r\n        setCurrentFriend,\r\n        friends, \r\n        setFriends\r\n      }}\r\n    >\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n","import React,{useContext} from \"react\";\r\nimport { DataContext } from \"../GenetalContext\";\r\n\r\nfunction FriendMessageBox({message}) {\r\n\r\n  const [messageData,setMessageData] = React.useState(message);\r\n\r\n\r\n  return (\r\n    <>\r\n      <li\r\n  \r\n      className=\"clearfix\">\r\n        <div className=\"message-data\">\r\n          <span className=\"message-data-time\">{messageData.date}</span>\r\n        </div>\r\n        <div className=\"message my-message\">{messageData.content}</div>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FriendMessageBox;\r\n// https://www.bootdey.com/img/Content/avatar/avatar8.png","import React from \"react\";\r\n\r\nfunction MessageBox({ message }) {\r\n  const [ messageData, setMessageData ] = React.useState(message);\r\n  return (\r\n    <>\r\n      <li className=\"clearfix\">\r\n      <div\r\n \r\n      className=\"message-data text-right\">\r\n        <span style={{ fontSize: 10 }} className=\"message-data-time\">\r\n          {messageData.date}\r\n        </span>\r\n      </div>\r\n      <div \r\n      style={{backgroundColor:\"#86c541\"}}\r\n      className=\"message other-message float-right my-message\">{messageData.content}</div>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MessageBox;\r\n","import React from \"react\";\r\nimport \"../../Css/chat.css\";\r\nimport $ from \"jquery\";\r\n\r\nfunction ProfileCard({ userFriend,index }) {\r\n  const [user, setUser] = React.useState(userFriend);\r\n\r\n  return (\r\n    <li \r\n\r\n\r\n    \r\n    onClick={() => {\r\n\r\n      let currentBTN = $(`.user-li${index}`)\r\n\r\n        $(`.user-li${index}`).toggleClass(\"active\");\r\n\r\n\r\n\r\n    }} className={`clearfix user-li${index}`}>\r\n      <img src={user.avatar} alt=\"avatar\" />\r\n      <div className=\"about\">\r\n        <div className=\"name\">{user.name}</div>\r\n        <div className=\"status\">\r\n          <i className=\"fa fa-circle online\"></i> online\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ProfileCard;\r\n","import React, { useContext } from \"react\";\r\nimport { DataContext } from \"../GenetalContext\";\r\n\r\nfunction TopProfileCard( {user} ) {\r\n  return (\r\n    <div className=\"col-lg-6\">\r\n      <a\r\n        href=\"javascript:void(0);\"\r\n        data-toggle=\"modal\"\r\n        data-target=\"#view_info\"\r\n      >\r\n        <img\r\n          src={user.avatar}\r\n          alt=\"avatar\"\r\n        />\r\n      </a>\r\n      <div className=\"chat-about\">\r\n        <h6 className=\"m-b-0\">{user.name}</h6>\r\n        <small>Last seen: 2 hours ago</small>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopProfileCard;\r\n","import React from \"react\";\r\n\r\nfunction LogOff() {\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={() => {\r\n          localStorage.removeItem(\"jwt\");\r\n          window.location.reload();\r\n        }}\r\n        className=\"btn btn-outline-danger\"\r\n      >\r\n        <img\r\n          style={{\r\n            width: \"25px\",\r\n            padding: \"5px\"\r\n          }}\r\n          src={process.env.PUBLIC_URL + \"/images/logoff.png\"}\r\n        />\r\n        Log Off\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LogOff;\r\n","import React, { useContext } from \"react\";\r\nimport { DataContext } from \"../Components/GenetalContext\";\r\n\r\nfunction RemoveFriendPrompt() {\r\n  const { user } = useContext(DataContext);\r\n\r\n  const [id, setId] = React.useState(user.id);\r\n  const [delUser, setDelUser] = React.useState(null);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          position: \"relative\",\r\n          left: \"-20px\"\r\n        }}\r\n      >\r\n        <div className=\"input-group mb-3\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\" id=\"basic-addon1\">\r\n              ID\r\n            </span>\r\n          </div>\r\n          <input\r\n            onChange={(e) => setDelUser(e.target.value)}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"User ID\"\r\n            aria-label=\"Username\"\r\n            aria-describedby=\"basic-addon1\"\r\n          />\r\n          <button\r\n            onClick={async () => {\r\n      \r\n\r\n              let post = await fetch(\r\n                \"http://localhost:8080/delete-user/\" + delUser,\r\n                {\r\n                  method: \"POST\",\r\n                  headers: { \"Content-Type\": \"application/json\" },\r\n                  body: user.id\r\n                }\r\n              );\r\n\r\n              let data = await post.json();\r\n              if (data.response === \"User deleted\") {\r\n                window.location.reload();\r\n              } else {\r\n                alert(data.response);\r\n              }\r\n            }}\r\n            style={{\r\n              margin: \"0 10px 0 10px\"\r\n            }}\r\n            className=\"btn btn-danger\"\r\n          >\r\n            Remove\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RemoveFriendPrompt;\r\n","import React from \"react\";\r\nimport RemoveFriendPrompt from \"./RemoveFriendPrompt\";\r\n\r\nfunction RemoveFriend() {\r\n\r\n  const [show, setShow] = React.useState(false);\r\n\r\n  return (\r\n    <>\r\n    <div>\r\n      <button\r\n        onClick={ () => {\r\n\r\n          setShow(!show);\r\n         \r\n        }}\r\n        style={{ margin: \"0 10px 0 10px\" }}\r\n        className=\"btn btn-outline-warning\"\r\n      >\r\n        \r\n        <img\r\n          style={{\r\n            width: \"25px\",\r\n            padding: \"2px\",\r\n            margin: \"0 10px 0 0px\"\r\n          }}\r\n          src=\"/images/remove.png\"\r\n        />\r\n        Remove Friend\r\n      </button>\r\n    </div>\r\n\r\n    <div \r\n    \r\n    style={{\r\n      position: \"absolute\",\r\n      top:\"50px\"\r\n  }}\r\n    \r\n    >\r\n\r\n{show ? (<RemoveFriendPrompt />):(<></>)}\r\n\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RemoveFriend;\r\n","import React from \"react\";\r\nimport LogOff from \"../../Utils/LogOff\";\r\nimport RemoveFriend from \"../../Utils/RemoveFriend\";\r\n\r\nfunction TopButtons() {\r\n  return (\r\n    <div className=\"col-lg-6 hidden-sm text-right\">\r\n\r\n<div className=\"d-flex flex-row-reverse\">\r\n<LogOff/>\r\n      <RemoveFriend/>\r\n\r\n</div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopButtons;\r\n","export class Message {\r\n  constructor(id, content, MyUserID, date, userToID) {\r\n    this.id = id;\r\n    this.content = content;\r\n    this.MyUserID = MyUserID;\r\n    this.date = date;\r\n    this.userToID = userToID;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nlet msg = new Message(\"\", \"\", \"\", \"\", \"\");\r\n","import React, { useContext, useState } from \"react\";\r\nimport { DataContext } from \"../GenetalContext\";\r\nimport { Message } from \"../../Classes/Messsage\";\r\n\r\nvar time = new Date();\r\ntime = time.toLocaleString(\"en-US\", {\r\n  dateStyle: \"medium\",\r\n  timeStyle: \"medium\",\r\n  hour12: true\r\n});\r\n\r\nfunction InputText({\r\n  messageData,\r\n  setMessageData,\r\n  setMyFriend,\r\n  myFriend,\r\n  setUser\r\n}) {\r\n  // const [content , setContent] = useState(\"\");\r\n  const {\r\n    messages,\r\n    currentFriend,\r\n    setCurrentFriend,\r\n    connection,\r\n    user,\r\n    friends,\r\n    setFriends\r\n  } = useContext(DataContext);\r\n\r\n  const [content, setContent] = useState(\"\");\r\n  const [id, setId] = useState(user.id);\r\n\r\n  React.useEffect(() => {\r\n    if (connection != null) {\r\n      connection.onmessage = (evt) => {\r\n        let message = JSON.parse(evt.data);\r\n\r\n        if (currentFriend.id === message.MyUserID) {\r\n          let myFriendTest01 = currentFriend;\r\n          myFriendTest01.messages.push(message);\r\n          setMyFriend({ ...myFriend, messages: myFriendTest01.messages });\r\n          \r\n        }\r\n      };\r\n    }\r\n\r\n    setId(user.id);\r\n  }, [\r\n    id,\r\n    connection,\r\n    user,\r\n    friends,\r\n    setFriends,\r\n    setCurrentFriend,\r\n    currentFriend\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"chat-message clearfix\">\r\n      {messages.map((item) => (\r\n        <h1>{item}</h1>\r\n      ))}\r\n\r\n      <div className=\"input-group mb-0\">\r\n        <div className=\"input-group-prepend\">\r\n          <span className=\"input-group-text\">\r\n            <i className=\"fa fa-send\"></i>\r\n          </span>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Enter text here...\"\r\n          onKeyPress={(e) => {\r\n            //get key code of enter\r\n            let newMSG = new Message(\r\n              \"001\",\r\n              content,\r\n              id,\r\n              time,\r\n              currentFriend.id\r\n            );\r\n            newMSG.date = time;\r\n            newMSG.content = e.target.value;\r\n            newMSG.userToID = currentFriend.id;\r\n            newMSG.MyUserID = id;\r\n\r\n            if (e.key === \"Enter\") {\r\n              let myFriendTest01 = currentFriend;\r\n              myFriendTest01.messages.push(newMSG);\r\n              setMyFriend({ ...myFriend, messages: myFriendTest01.messages });\r\n\r\n              connection.send(\"request-send \" + JSON.stringify(newMSG));\r\n              e.target.value = \"\";\r\n              setContent(\"\");\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputText;\r\n","import React from 'react'\r\n\r\nfunction SearchChat() {\r\n    return (\r\n        <div className=\"input-group\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">\r\n                      <i className=\"fa fa-search\"></i>\r\n                    </span>\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Search...\"\r\n                  />\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default SearchChat\r\n","import React from \"react\";\r\nimport $ from \"jquery\";\r\nimport { adduserBTN } from \"../Classes/Functions\";\r\nimport { PromptAddUserCloseFromOutside } from \"../Classes/Functions\";\r\n\r\nimport \"../Css/PromptAddUser.css\";\r\nimport { DataContext } from \"../Components/GenetalContext\";\r\n\r\nfunction PromptAddUser({ setVisibility, visibility }) {\r\n  const { user } = React.useContext(DataContext);\r\n  const [myUser, setMyUser] = React.useState(user);\r\n\r\n  function serVisibilityfunc() {\r\n    setVisibility(!visibility);\r\n  }\r\n\r\n  let newUser = {\r\n    id: \"\",\r\n    name: \"\",\r\n    userName: \"\",\r\n    messages: [],\r\n    avatar: \"\"\r\n  };\r\n\r\n  PromptAddUserCloseFromOutside(serVisibilityfunc);\r\n\r\n  return (\r\n    <div onClick={(e) => {}}>\r\n      <div\r\n        id=\"prompt-add-user\"\r\n        style={{\r\n          position: \"absolute\"\r\n        }}\r\n      >\r\n        <button\r\n          onClick={() => {\r\n            setVisibility(!visibility);\r\n          }}\r\n          style={{\r\n            borderRadius: \"50%\",\r\n            position: \"absolute\",\r\n            top: \"-10px\",\r\n            right: \"-10px\"\r\n          }}\r\n          className=\"btn btn-danger\"\r\n        >\r\n          X\r\n        </button>\r\n        <div\r\n          style={{\r\n            border: \"3px solid gray\"\r\n          }}\r\n          className=\"form\"\r\n        >\r\n          <div className=\"title\">Add a user</div>\r\n          <div className=\"subtitle\">Add your new friend</div>\r\n          <div className=\"input-container ic1\">\r\n            <input\r\n              onChange={(e) => {\r\n                newUser.name = e.target.value;\r\n              }}\r\n              id=\"firstname\"\r\n              className=\"input\"\r\n              type=\"text\"\r\n              placeholder=\" \"\r\n            />\r\n            <div className=\"cut\"></div>\r\n            <label className=\"placeholder\">Name</label>\r\n          </div>\r\n          <div className=\"input-container ic2\">\r\n            <input\r\n              onChange={(e) => {\r\n                newUser.userName = e.target.value;\r\n              }}\r\n              id=\"lastname\"\r\n              className=\"input\"\r\n              type=\"text\"\r\n              placeholder=\" \"\r\n            />\r\n            <div className=\"cut\"></div>\r\n            <label className=\"placeholder\">Username</label>\r\n          </div>\r\n          <div className=\"input-container ic2\">\r\n            <input\r\n              onChange={(e) => {\r\n                newUser.id = e.target.value;\r\n              }}\r\n              id=\"email\"\r\n              className=\"input\"\r\n              type=\"text\"\r\n              placeholder=\" \"\r\n            />\r\n            <div className=\"cut\"></div>\r\n            <label className=\"placeholder\">Friend ID</label>\r\n          </div>\r\n\r\n          <button\r\n            onClick={async () => {\r\n              let post = await fetch(\r\n                `http://localhost:8080/add-friend/${myUser.id}`,\r\n                {\r\n                  method: \"POST\",\r\n                  headers: { \"Content-Type\": \"application/json\" },\r\n                  body: JSON.stringify(newUser)\r\n                }\r\n              );\r\n\r\n              let data = await post.json();\r\n\r\n              if (data.response === \"Friend added\") window.location.reload();\r\n\r\n\r\n\r\n              setVisibility(!visibility);\r\n            }}\r\n            style={{ position: \"relative\" }}\r\n            type=\"text\"\r\n            className=\"submit btn btn-danger\"\r\n          >\r\n            <img\r\n              style={{\r\n                height: 28,\r\n                position: \"absolute\",\r\n                float: \"left\",\r\n                left: \"10px\",\r\n                filter: \"invert(100%)\",\r\n                opacity: \"0.9\"\r\n              }}\r\n              src=\"/images/add2.png\"\r\n            />\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PromptAddUser;\r\n","\r\nimport $ from 'jquery';\r\nexport function hideShowAddUser(){\r\n\r\n\r\n}\r\n\r\nexport function PromptAddUserCloseFromOutside(callBack) {\r\n$(document).mouseup(function (e) {\r\n    var container = $(\"#prompt-add-user\");\r\n    // if the target of the click isn't the container nor a descendant of the container\r\n    if (!container.is(e.target) && container.has(e.target).length === 0) {\r\n        callBack()\r\n    }\r\n  });\r\n}\r\n\r\n\r\nexport function adduserBTN(){\r\n\r\n   \r\n    $(\".addUser-container\").css({top: \"-50px\"});\r\n    $(\".addUser-container\").animate({top: \"50px\"}, \"fast\");\r\n\r\n}","import React,{useContext} from \"react\";\r\nimport $ from \"jquery\";\r\nimport PromptAddUser from \"../../Utils/PromptAddUser\";\r\nimport { adduserBTN } from \"../../Classes/Functions\";\r\nimport { DataContext } from \"../GenetalContext\";\r\n\r\nfunction AddFriend() {\r\n\r\n  const [addUserPrompt, setAddUserPrompt] = React.useState(false);\r\n\r\n\r\n  // val id: String,\r\n  // val name: String,\r\n  // val userName: String,\r\n  // var messages: List<Message>,\r\n  // val avatar: String,\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          position: \"relative\",\r\n          top: \"10px\"\r\n        }}\r\n      >\r\n        <button\r\n          className=\"addUser-btn\"\r\n          onClick={() => {\r\n            setAddUserPrompt(!addUserPrompt);\r\n            adduserBTN();\r\n          }}\r\n          className=\"btn btn-link\"\r\n        >\r\n          <img\r\n            style={{\r\n              height: 28\r\n            }}\r\n            src=\"/images/add-button.png\"\r\n          />\r\n        </button>\r\n        <label\r\n          style={{\r\n            fontFamily: \"Mali\"\r\n          }}\r\n        >\r\n          add friend\r\n        </label>\r\n      </div>\r\n      <div className=\"addUser-container\" style={{ position: \"absolute\" }}>\r\n        {/* <PromptAddUser setVisibility={setAddUserPrompt} visibility={addUserPrompt}/> */}\r\n        {addUserPrompt && (\r\n          <PromptAddUser\r\n            setVisibility={setAddUserPrompt}\r\n            visibility={addUserPrompt}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddFriend;\r\n","import React, { useContext } from \"react\";\r\nimport \"../Css/chat.css\";\r\nimport FriendMessageBox from \"./Message/FriendMessageBox\";\r\nimport MessageBox from \"./Message/MessageBox\";\r\nimport ProfileCard from \"./Profile/ProfileCard\";\r\nimport $ from \"jquery\";\r\nimport TopProfileCard from \"./Profile/TopProfileCard\";\r\nimport TopButtons from \"./Chat Components/TopButtons\";\r\nimport InputText from \"./Chat Components/InputText\";\r\nimport SearchChat from \"./Chat Components/SearchChat\";\r\nimport { DataContext } from \"./GenetalContext\";\r\nimport { Message } from \"../Classes/Messsage\";\r\nimport AddFriend from \"./Chat Components/AddFriend\";\r\n//laptop changes\r\n\r\nfunction ChatApp() {\r\n  const { user, id, setId, currentFriend, setCurrentFriend } =\r\n    useContext(DataContext);\r\n\r\n  const [myFriend, setMyFriend] = React.useState(currentFriend);\r\n\r\n  const [messages, setMessages] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    // scroll to buttton\r\n\r\n    $(\".chat-history\").animate({ scrollTop: 10000 }, \"slow\");\r\n  }, [id, setId, myFriend, setMyFriend]);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          position: \"relative\",\r\n          top: \"10vh\"\r\n        }}\r\n        className=\"container\"\r\n      >\r\n        <div className=\"row clearfix \">\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"card chat-app  chat-container\">\r\n              <div id=\"plist\" className=\"people-list\">\r\n                <SearchChat />\r\n                <AddFriend />\r\n                <ul className=\"list-unstyled chat-list mt-2 mb-0\">\r\n                  {user.friends &&\r\n                    user.friends.map((friend, index) => {\r\n                      return (\r\n                        <div\r\n                          onClick={async () => {\r\n                            let token = localStorage.getItem(\"jwt\");\r\n\r\n                            let request = await fetch(\r\n                              `http://localhost:8080/get-messages/${token}/${user.id}/${friend.id}`\r\n                            );\r\n                            let response = await request.json();\r\n\r\n                            setMyFriend(response);\r\n                            setCurrentFriend(response);\r\n                          }}\r\n                        >\r\n                          <ProfileCard userFriend={friend} />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                </ul>\r\n              </div>\r\n              <div className=\"chat\">\r\n                <div className=\"chat-header clearfix\">\r\n                  <div className=\"row\">\r\n                    <TopProfileCard user={user} />\r\n                    <TopButtons />\r\n                  </div>\r\n                </div>\r\n                <div className=\"chat-history\">\r\n                  <ul className=\"m-b-0  chat-box\">\r\n                    {myFriend.messages &&\r\n                      myFriend.messages.map((message) => {\r\n                        if (message.userToID === user.id) {\r\n                          return <FriendMessageBox message={message} />;\r\n                        } else {\r\n                          return <MessageBox message={message} />;\r\n                        }\r\n                      })}\r\n\r\n                    {/* {currentFriend.messages && currentFriend.messages.map((message) => {\r\n                      return (\r\n                        <div\r\n                          onClick={() => {\r\n                            \r\n                            alert(message.content);\r\n                   \r\n                          }}\r\n                        >\r\n                          {message.MyUserID === user.id ? (\r\n                            <MessageBox message={message} />\r\n                          ) : (\r\n                            <FriendMessageBox message={message} />\r\n                          )}\r\n                        </div>\r\n                      );\r\n                    })} */}\r\n                  </ul>\r\n                </div>\r\n\r\n                <InputText\r\n                  setMessageData={setMessages}\r\n                  messageData={messages}\r\n                  setMyFriend={setMyFriend}\r\n                  myFriend={myFriend}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatApp;\r\n","import React from \"react\";\r\nimport $ from \"jquery\";\r\n\r\nfunction WebSocketClient() {\r\n  /* connect stomp client */\r\n  const [messages, setMessages] = React.useState([]);\r\n  const [connected, setConnected] = React.useState(false);\r\n  const [connection, setConnection] = React.useState(null);\r\n  const [sessionId, setSessionId] = React.useState(\r\n    localStorage.getItem(\"sessionId\")\r\n  );\r\n\r\n  \r\n\r\n\r\n\r\n  function connectWS() {\r\n    if (connection == null) {\r\n      // setConnection(new WebSocket(\"ws://localhost:8080/send\"));\r\n      setConnected(true);\r\n    }\r\n\r\n    if (connection !== null) {\r\n      connection.onopen = () => {\r\n        console.log(\"WebSocket Client Connected\");\r\n        setConnected(true);\r\n        alert(\"connected\");\r\n      };\r\n\r\n      connection.onmessage = (evt) => {\r\n        setMessages((messages) => [...messages, evt.data]);\r\n      };\r\n\r\n      connection.onclose = () => {\r\n        console.log(\"WebSocket Client Disconnected\");\r\n        setConnected(false);\r\n        alert(\"disconnected\");\r\n      };\r\n\r\n      connection.onerror = (error) => {\r\n        console.log(\"WebSocket Client Error: \" + error);\r\n        alert(\"error occured web socket\");\r\n      };\r\n    }\r\n  }\r\n\r\n  function disconnectWS() {\r\n    if (connected) {\r\n      connection.send(\"disconnect \" + sessionId);\r\n      connection.close();\r\n      // setConnection(null);\r\n      setConnected(false);\r\n      alert(\"disconnected\");\r\n    } else {\r\n      alert(\"not connected\");\r\n    }\r\n  }\r\n\r\n  window.addEventListener(\"onbeforeunload\", function (event) {\r\n    disconnectWS();\r\n  });\r\n\r\n  window.onunload = function (event) {\r\n    disconnectWS();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n\r\n\r\n    \r\n  }, []);\r\n\r\n  if (connection !== null) {\r\n    connection.onmessage = (evt) => {\r\n      if (evt.data.includes(\"Welcome to the server \")) {\r\n        let id = evt.data.replace(\"Welcome to the server \", \"\");\r\n        localStorage.setItem(\"sessionId\", id);\r\n        setSessionId(id);\r\n      }\r\n      console.log(\"Message Received: \" + evt.data);\r\n      setMessages((messages) => [...messages, evt.data]);\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: 50 }}>\r\n      <div>\r\n        <button\r\n          className=\"btn btn-success connect-btn\"\r\n          onClick={() => {\r\n            connectWS();\r\n          }}\r\n        >\r\n          connect\r\n        </button>\r\n\r\n        <button\r\n          className=\"btn btn-danger disconnect-btn\"\r\n          onClick={() => {\r\n            if (connected) {\r\n              connection.send(\"disconnect \" + sessionId);\r\n              connection.close();\r\n              setConnection(null);\r\n              setConnected(false);\r\n              alert(\"disconnect\");\r\n            } else {\r\n              alert(\"not connected\");\r\n            }\r\n          }}\r\n        >\r\n          disconnect\r\n        </button>\r\n      </div>\r\n      <button\r\n        className=\"btn btn-light\"\r\n        onClick={(e) => {\r\n          // if (isOpen(connection)) {\r\n          // }\r\n          connection.send(sessionId + \" Hello from the client\");\r\n          // if(!isOpen(connection)) return;\r\n        }}\r\n      >\r\n        send message\r\n      </button>\r\n      <button\r\n        onClick={() => {\r\n          setMessages([]);\r\n        }}\r\n        className=\"btn btn-warning\"\r\n      >\r\n        clear messages\r\n      </button>\r\n\r\n      {/* <input type=\"text\" /> */}\r\n      <ul>\r\n        <h4>messages</h4>\r\n\r\n        {messages.map((message, index) => (\r\n          <li key={index}>{message}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WebSocketClient;\r\n","import React from \"react\";\nimport LoginPage from \"./Components/Chat Components/LoginPage\";\nimport ChatApp from \"./Components/ChatApp\";\nimport { DataProvider } from \"./Components/GenetalContext\";\nimport WebSocketClient from \"./Components/Message/WebSocketClient\";\nimport ProfileCard from \"./Components/Profile/ProfileCard\";\nimport RegisterUser from \"./Utils/RegisterUser\";\n\nlet style = {\n  backgroundColor: \"black\",\n  height: \"200vh\",\n  top: -20,\n  position: \"relative\"\n};\n\nfunction App() {\n  const [jwt, setJwt] = React.useState(\"\");\n\n  React.useEffect(() => {\n    const token = localStorage.getItem(\"jwt\");\n    if (token) {\n      setJwt(token);\n    }\n  }, []);\n\n  return (\n    <>\n      <div style={jwt ? style : {}}>\n        <DataProvider>\n          {jwt ? <ChatApp /> : <LoginPage />}\n\n          <div className=\"container \">\n      \n   \n              {/* <RegisterUser />  */}\n         \n          </div>\n        </DataProvider>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}